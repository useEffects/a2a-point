version: '3.8'

services:
  postgres:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB1: directus
      POSTGRES_DB2: keycloak
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB1 && pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB2" ]
      interval: 10s
      timeout: 5s
      retries: 3
    volumes:
      - ./scripts/docker-init-scripts/create-databases.sh:/docker-entrypoint-initdb.d/create-databases.sh

  keycloak:
    build:
      context: .
      dockerfile: ./apps/keycloak/Dockerfile
    ports:
      - "8080:8080"
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB_USERNAME: admin
      KC_DB_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL_HOST: postgres
      KC_HOSTNAME_URL: http://localhost:8080
      KC_PROXY: edge
      KC_HOSTNAME_STRICT: false
      KC_HOSTNAME_STRICT_HTTPS: false
      KC_HTTP_ENABLED: true
      KC_HOSTNAME_DEBUG: true
      KC_HEALTH_ENABLED: true

    healthcheck:
      test: ["CMD-SHELL", 'exec 3<>/dev/tcp/localhost/8080 && echo -e "GET /health/ready HTTP/1.1\r\nHost: localhost\r\nConnection: close\r\n\r\n" >&3 || exit 1']
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy

  directus:
    build:
      context: .
      dockerfile: ./apps/directus/Dockerfile
    ports:
      - "5000:5000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:8055/server/health || exit 1
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 5
    depends_on:
      postgres:
        condition: service_healthy
      keycloak:
        condition: service_healthy

  client:
    build:
      context: ./apps/client
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    healthcheck:
      test: wget --no-verbose --tries=1 --spider http://localhost:3000/health || exit 1
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 3
    depends_on:
      directus:
        condition: service_healthy

  nginx:
    build:
      context: ./apps/nginx
      dockerfile: Dockerfile
    depends_on:
      directus:
        condition: service_healthy
      client:
        condition: service_healthy
    ports:
      - "80:80"
    


